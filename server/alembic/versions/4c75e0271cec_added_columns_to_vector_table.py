"""Added columns to Vector table

Revision ID: 4c75e0271cec
Revises: 1abd517b82eb
Create Date: 2022-01-18 09:24:48.434063

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "4c75e0271cec"
down_revision = "1abd517b82eb"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("qualifiers", schema=None) as batch_op:
        batch_op.alter_column("feature", existing_type=sa.INTEGER(), nullable=False)

    with op.batch_alter_table("vectors", schema=None) as batch_op:
        batch_op.drop_column("mpg_number")
        batch_op.drop_column("sequence_length")
        batch_op.add_column(sa.Column("bacterial_strain", sa.String()))
        batch_op.add_column(sa.Column("responsible", sa.String()))
        batch_op.add_column(sa.Column("group", sa.String()))
        batch_op.add_column(sa.Column("bsa1_overhang", sa.String()))
        batch_op.add_column(sa.Column("selection", sa.String()))
        batch_op.add_column(sa.Column("cloning_technique", sa.String()))
        batch_op.add_column(sa.Column("is_BsmB1_free", sa.String()))
        batch_op.add_column(sa.Column("notes", sa.String()))
        batch_op.add_column(sa.Column("REase_digest", sa.String()))

        batch_op.alter_column(
            "bacterial_strain", existing_type=sa.String(), nullable=False
        )
        batch_op.alter_column("responsible", existing_type=sa.String(), nullable=False)
        batch_op.alter_column("group", existing_type=sa.String(), nullable=False)
        batch_op.alter_column(
            "bsa1_overhang", existing_type=sa.String(), nullable=False
        )
        batch_op.alter_column("selection", existing_type=sa.String(), nullable=False)
        batch_op.alter_column(
            "cloning_technique", existing_type=sa.String(), nullable=False
        )
        batch_op.alter_column(
            "is_BsmB1_free", existing_type=sa.String(), nullable=False
        )
        batch_op.add_column(sa.Column("level", sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column("BsmB1_site", sa.String(), nullable=True))
        batch_op.add_column(sa.Column("gateway_site", sa.String(), nullable=True))

    op.create_table(
        "user_vector_mapping",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user", sa.Integer(), nullable=False),
        sa.Column("vector", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["vector"],
            ["vectors.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    op.create_table(
        "vector_hierarchy",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("parent", sa.Integer(), nullable=False),
        sa.Column("child", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["child"],
            ["vectors.id"],
        ),
        sa.ForeignKeyConstraint(
            ["parent"],
            ["vectors.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("vectors", schema=None) as batch_op:
        batch_op.drop_column("REase_digest")
        batch_op.drop_column("notes")
        batch_op.drop_column("is_BsmB1_free")
        batch_op.drop_column("cloning_technique")
        batch_op.drop_column("selection")
        batch_op.drop_column("bsa1_overhang")
        batch_op.drop_column("group")
        batch_op.drop_column("responsible")
        batch_op.drop_column("bacterial_strain")
        batch_op.drop_column("gateway_site")
        batch_op.drop_column("BsmB1_site")
        batch_op.drop_column("level")
        batch_op.add_column(sa.Column("mpg_number", sa.String(), nullable=False))
        batch_op.add_column(sa.Column("sequence_length", sa.Integer(), nullable=False))

    with op.batch_alter_table("qualifiers", schema=None) as batch_op:
        batch_op.alter_column("feature", existing_type=sa.INTEGER(), nullable=True)

    op.drop_table("user_vector_mapping")
    op.drop_table("vector_hierarchy")
    # ### end Alembic commands ###
